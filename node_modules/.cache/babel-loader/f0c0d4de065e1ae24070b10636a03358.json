{"ast":null,"code":"import _slicedToArray from \"/home/alex/Documentos/projetos/react/FeedBackAppCobranca/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alex/Documentos/projetos/react/FeedBackAppCobranca/src/App.js\";\nimport React, { useState } from \"react\";\nimport api from \"./services/api\";\nimport \"./App.css\";\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        feedback = _useState4[0],\n        setFeedback = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        msgObg = _useState6[0],\n        setMsgObg = _useState6[1];\n\n  const _useState7 = useState(\"feedback me\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        textBtn = _useState8[0],\n        setTextBtn = _useState8[1];\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setTextBtn(\"Salvando...\");\n    var date = new Date();\n    var dataCompleta = date.toLocaleString(); //console.log(email);\n    //console.log(feedback);\n    //console.log(dataCompleta);\n\n    await api.post(\"/feedback\", {\n      email,\n      feedback,\n      dataCompleta\n    }).then(response => {\n      if (response.status === 200) {\n        setMsgObg(true);\n        setTextBtn(\"Salvo com sucesso, obrigado.\");\n      }\n    }).catch(error => {\n      console.log(error);\n      alert(\"Serviço indisponível\");\n      limpaCampos();\n      setTextBtn(\"feedback me\");\n    });\n  }\n\n  function limpaCampos() {\n    setEmail(\"\");\n    setFeedback(\"\");\n    setTextBtn(\"feedback me\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"apenas eu\",\n    src: \"https://pbs.twimg.com/profile_images/1229280534137901058/QuZ1v0Kv_400x400.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Criei essa page para receber alguns feedbacks sendo positivo/negativo tanto para os meus projetos/minha pessoa. \\xC9 isso vlw!\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"E-MAIL \"), React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"FeedBack\"), React.createElement(\"input\", {\n    id: \"feedback\",\n    type: \"feedback\",\n    placeholder: \"\",\n    value: feedback,\n    onChange: event => setFeedback(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, textBtn)), msgObg ? React.createElement(React.Fragment, null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Muito Obrigado pelo feedback. \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"@alexsouzasilvax\"))) : React.createElement(React.Fragment, null, \" \")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/Documentos/projetos/react/FeedBackAppCobranca/src/App.js"],"names":["React","useState","api","App","email","setEmail","feedback","setFeedback","msgObg","setMsgObg","textBtn","setTextBtn","handleSubmit","event","preventDefault","date","Date","dataCompleta","toLocaleString","post","then","response","status","catch","error","console","log","alert","limpaCampos","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport api from \"./services/api\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [msgObg, setMsgObg] = useState();\n  const [textBtn, setTextBtn] = useState(\"feedback me\");\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setTextBtn(\"Salvando...\");\n\n    var date = new Date();\n    var dataCompleta = date.toLocaleString();\n\n    //console.log(email);\n    //console.log(feedback);\n    //console.log(dataCompleta);\n\n    await api\n      .post(\"/feedback\", { email, feedback, dataCompleta })\n      .then(response => {\n        if (response.status === 200) {\n          setMsgObg(true);\n          setTextBtn(\"Salvo com sucesso, obrigado.\");\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        alert(\"Serviço indisponível\");\n        limpaCampos();\n        setTextBtn(\"feedback me\");\n      });\n  }\n\n  function limpaCampos() {\n    setEmail(\"\");\n    setFeedback(\"\");\n    setTextBtn(\"feedback me\");\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <img\n          alt=\"apenas eu\"\n          src=\"https://pbs.twimg.com/profile_images/1229280534137901058/QuZ1v0Kv_400x400.jpg\"\n        />\n\n        <p>\n          Criei essa page para receber alguns feedbacks sendo positivo/negativo\n          tanto para os meus projetos/minha pessoa. É isso vlw!\n        </p>\n\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"email\">E-MAIL </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={event => setEmail(event.target.value)}\n          />\n\n          <label htmlFor=\"feedback\">FeedBack</label>\n\n          <input\n            id=\"feedback\"\n            type=\"feedback\"\n            placeholder=\"\"\n            value={feedback}\n            onChange={event => setFeedback(event.target.value)}\n          />\n\n          <button className=\"btn\" type=\"submit\">\n            {textBtn}\n          </button>\n        </form>\n        {msgObg ? (\n          <>\n            <br />\n            <br />\n            <p>\n              Muito Obrigado pelo feedback. <strong>@alexsouzasilvax</strong>\n            </p>\n          </>\n        ) : (\n          <> </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}