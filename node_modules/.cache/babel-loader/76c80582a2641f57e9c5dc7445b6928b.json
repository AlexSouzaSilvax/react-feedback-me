{"ast":null,"code":"import _slicedToArray from \"/home/alex/Documentos/projetos/react-native/temp/helpDiego/SemanaOmniStack9.0/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alex/Documentos/projetos/react-native/temp/helpDiego/SemanaOmniStack9.0/frontend/src/pages/New/index.js\";\nimport React, { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport camera from \"../../assets/camera.svg\";\nimport iconLimpar from \"../../assets/icons/iconLimpar.png\";\nimport iconSair from \"../../assets/icons/iconSair.png\";\nexport default function New({\n  history\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        thumbnail = _useState2[0],\n        setThumbnail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        company = _useState4[0],\n        setCompany = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        techs = _useState6[0],\n        setTechs = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        price = _useState8[0],\n        setPrice = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        msgError = _useState10[0],\n        setMsgError = _useState10[1];\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  async function handleSubmit(event) {\n    event.preventDefault(); //verifica se há informações no form\n\n    if (!thumbnail || !company || !techs) {\n      setMsgError(\"Está vazio ou inválido.\");\n    } else {\n      const data = new FormData();\n      const user_id = localStorage.getItem(\"user\");\n      data.append(\"thumbnail\", thumbnail);\n      data.append(\"company\", company);\n      data.append(\"techs\", techs);\n      data.append(\"price\", price);\n      await api.post(\"/spots\", data, {\n        headers: {\n          user_id\n        }\n      });\n      history.push(\"/dashboard\");\n    }\n  }\n\n  function limparCampos() {\n    setThumbnail(null);\n    setCompany(\"\");\n    setTechs(\"\");\n    setPrice(\"\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"divCabecalho\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnSairNew\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconBtnSair\",\n    src: iconSair,\n    alt: \"icone_sair => (fun\\xE7\\xE3o para sair da tela)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btnLimparCamposNew\",\n    onClick: limparCampos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconBtnLimparCampos\",\n    src: iconLimpar,\n    alt: \"icone_vassoura => (fun\\xE7\\xE3o para limpar a tela)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: `url(${preview})`\n    },\n    className: thumbnail ? \"has-thumbnail\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, msgError ? React.createElement(\"p\", {\n    className: \"msgError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, msgError) : React.createElement(React.Fragment, null, \" \"), React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => {\n      setThumbnail(event.target.files[0]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"Enviar imagem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"EMPRESA *\"), msgError ? React.createElement(\"p\", {\n    className: \"msgError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, msgError) : React.createElement(React.Fragment, null, \" \"), React.createElement(\"input\", {\n    id: \"company\",\n    placeholder: \"Sua empresa incr\\xEDvel\",\n    value: company,\n    onChange: event => setCompany(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"techs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"TECNOLOGIAS * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"(separadas por v\\xEDrgula)\")), msgError ? React.createElement(\"p\", {\n    className: \"msgError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, msgError) : React.createElement(React.Fragment, null, \" \"), React.createElement(\"input\", {\n    id: \"techs\",\n    placeholder: \"Quais tecnologias usam?\",\n    value: techs,\n    onChange: event => setTechs(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"VALOR DA DI\\xC1RIA (em branco para GRATUITO)\"), React.createElement(\"input\", {\n    id: \"price\",\n    placeholder: \"Valor cobrado por dia\",\n    value: price,\n    onChange: event => setPrice(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["/home/alex/Documentos/projetos/react-native/temp/helpDiego/SemanaOmniStack9.0/frontend/src/pages/New/index.js"],"names":["React","useState","useMemo","Link","api","iconLimpar","iconSair","New","history","thumbnail","setThumbnail","company","setCompany","techs","setTechs","price","setPrice","msgError","setMsgError","preview","URL","createObjectURL","handleSubmit","event","preventDefault","data","FormData","user_id","localStorage","getItem","append","post","headers","push","limparCampos","backgroundImage","target","files","camera","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nimport \"./styles.css\";\nimport camera from \"../../assets/camera.svg\";\n\nimport iconLimpar from \"../../assets/icons/iconLimpar.png\";\nimport iconSair from \"../../assets/icons/iconSair.png\";\n\nexport default function New({ history }) {\n  const [thumbnail, setThumbnail] = useState(null);\n  const [company, setCompany] = useState(\"\");\n  const [techs, setTechs] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const [msgError, setMsgError] = useState();\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    //verifica se há informações no form\n    if (!thumbnail || !company || !techs) {\n      setMsgError(\"Está vazio ou inválido.\");\n    } else {\n      const data = new FormData();\n      const user_id = localStorage.getItem(\"user\");\n\n      data.append(\"thumbnail\", thumbnail);\n      data.append(\"company\", company);\n      data.append(\"techs\", techs);\n      data.append(\"price\", price);\n\n      await api.post(\"/spots\", data, {\n        headers: {\n          user_id\n        }\n      });\n\n      history.push(\"/dashboard\");\n    }\n  }\n\n  function limparCampos() {\n    setThumbnail(null);\n    setCompany(\"\");\n    setTechs(\"\");\n    setPrice(\"\");\n  }\n\n  return (\n    <>\n      <div className=\"divCabecalho\">\n        <Link to=\"/dashboard\">\n          <button className=\"btnSairNew\">\n            <img\n              className=\"iconBtnSair\"\n              src={iconSair}\n              alt=\"icone_sair => (função para sair da tela)\"\n            />\n          </button>\n        </Link>\n\n        <button className=\"btnLimparCamposNew\" onClick={limparCampos}>\n          <img\n            className=\"iconBtnLimparCampos\"\n            src={iconLimpar}\n            alt=\"icone_vassoura => (função para limpar a tela)\"\n          />\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <label\n          id=\"thumbnail\"\n          style={{ backgroundImage: `url(${preview})` }}\n          className={thumbnail ? \"has-thumbnail\" : \"\"}\n        >\n          {msgError ? <p className=\"msgError\">{msgError}</p> : <> </>}\n          <input\n            type=\"file\"\n            onChange={event => {\n              setThumbnail(event.target.files[0]);\n            }}\n          />\n          <img src={camera} alt=\"Enviar imagem\" />\n        </label>\n\n        <label htmlFor=\"company\">EMPRESA *</label>\n\n        {msgError ? <p className=\"msgError\">{msgError}</p> : <> </>}\n\n        <input\n          id=\"company\"\n          placeholder=\"Sua empresa incrível\"\n          value={company}\n          onChange={event => setCompany(event.target.value)}\n        />\n\n        <label htmlFor=\"techs\">\n          TECNOLOGIAS * <span>(separadas por vírgula)</span>\n        </label>\n        {msgError ? <p className=\"msgError\">{msgError}</p> : <> </>}\n        <input\n          id=\"techs\"\n          placeholder=\"Quais tecnologias usam?\"\n          value={techs}\n          onChange={event => setTechs(event.target.value)}\n        />\n\n        <label htmlFor=\"price\">VALOR DA DIÁRIA (em branco para GRATUITO)</label>\n        <input\n          id=\"price\"\n          placeholder=\"Valor cobrado por dia\"\n          value={price}\n          onChange={event => setPrice(event.target.value)}\n        />\n\n        <button type=\"submit\" className=\"btn\">\n          Cadastrar\n        </button>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}