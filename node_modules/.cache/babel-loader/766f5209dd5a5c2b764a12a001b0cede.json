{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documentos/projetos/react/FeedBackAppCobranca/src/pages/FeedBack/index.js\";\nimport React, { useState } from \"react\"; //import api from \"../../services/api\";\n\nimport \"./styles.css\";\nexport default function FeedBack({\n  history\n}) {\n  //  const [email, setEmail] = useState(\"\");\n  // const [msgError, setMsgError] = useState(\"\");\n\n  /*async function handleSubmit(event) {\n    event.preventDefault();\n     if (email) {\n      const response = await api.post(\"/sessions\", { email });\n       const { _id } = response.data;\n       localStorage.setItem(\"user\", _id);\n       history.push(\"/dashboard\");\n    } else {\n      setMsgError(\"E-mail vazio ou inválido.\");\n    }\n  }\n  */\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Ofere\\xE7a \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"spots\"), \" para programadores e encontre\", \" \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"talentos\"), \" para sua empresa\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"E-MAIL *\"), msgError ? React.createElement(\"p\", {\n    htmlFor: \"email\",\n    className: \"msgError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, msgError) : React.createElement(React.Fragment, null, \" \"), React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Seu melhor e-mail\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"feedback me\")));\n}","map":{"version":3,"sources":["/home/alex/Documentos/projetos/react/FeedBackAppCobranca/src/pages/FeedBack/index.js"],"names":["React","useState","FeedBack","history","handleSubmit","msgError","email","event","setEmail","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAO,cAAP;AACA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC5C;AACA;;AAEA;;;;;;;;;;;;AAgBA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADV,oCAC+D,GAD/D,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,sBADF,EAME;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGGC,QAAQ,GACP;AAAG,IAAA,OAAO,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,CADO,GAKP,8CARJ,EAWE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAEC,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAmBE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnBF,CANF,CADF;AAgCD","sourcesContent":["import React, { useState } from \"react\";\n//import api from \"../../services/api\";\nimport \"./styles.css\";\nexport default function FeedBack({ history }) {\n  //  const [email, setEmail] = useState(\"\");\n  // const [msgError, setMsgError] = useState(\"\");\n\n  /*async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (email) {\n      const response = await api.post(\"/sessions\", { email });\n\n      const { _id } = response.data;\n\n      localStorage.setItem(\"user\", _id);\n\n      history.push(\"/dashboard\");\n    } else {\n      setMsgError(\"E-mail vazio ou inválido.\");\n    }\n  }\n*/\n  return (\n    <>\n      <p>\n        Ofereça <strong>spots</strong> para programadores e encontre{\" \"}\n        <strong>talentos</strong> para sua empresa\n      </p>\n\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">E-MAIL *</label>\n\n        {msgError ? (\n          <p htmlFor=\"email\" className=\"msgError\">\n            {msgError}\n          </p>\n        ) : (\n          <> </>\n        )}\n\n        <input\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Seu melhor e-mail\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n\n        <button className=\"btn\" type=\"submit\">\n          feedback me\n        </button>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}